<Page x:Class="WinBlur.App.FeedPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:tk="using:CommunityToolkit.WinUI.UI"
      xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
      xmlns:model="using:WinBlur.App.Model"
      xmlns:vmodel="using:WinBlur.App.ViewModel"
      xmlns:helpers="using:WinBlur.App.Helpers"
      xmlns:view="using:WinBlur.App.View"
      mc:Ignorable="d">

    <Page.Resources>
        <vmodel:FeedViewModel x:Key="viewModel"/>
        <CollectionViewSource x:Name="articleListViewSource" />
    </Page.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition x:Name="CommentsRow"
                           Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="articleListColumn" Width="*" />
            <ColumnDefinition x:Name="articleDetailColumn" Width="1.618*" />
        </Grid.ColumnDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="visualStates">
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>

                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Article list card -->
        <Grid Grid.Column="0"
              Grid.Row="0"
              Grid.RowSpan="2"
              Style="{StaticResource CardGridStyle}"
              Margin="0,0,8,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <CommandBar x:Name="articleListCommandBar"
                        Grid.Row="0"
                        IsDynamicOverflowEnabled="True"
                        DefaultLabelPosition="Right">
                <AppBarButton x:Name="markFeedAsReadButton"
                              Label="Mark as read"
                              LabelPosition="Collapsed"
                              Icon="Bullets"
                              Click="markFeedAsReadButton_Click"
                              ToolTipService.ToolTip="Mark as read"
                              IsEnabled="{x:Bind viewModel.CanMarkAsRead}">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout Placement="Bottom">
                            <StackPanel Width="200">
                                <TextBlock Text="Mark these articles as read?"
                                           Style="{StaticResource BaseTextBlockStyle}"
                                           Margin="0,0,0,5" />
                                <TextBlock Text="You can turn this prompt off in settings."
                                           TextWrapping="WrapWholeWords"
                                           Margin="0,0,0,20" />
                                <Button x:Name="markFeedAsReadSubmitButton"
                                        Content="Yes"
                                        Width="75"
                                        Click="markFeedAsReadSubmitButton_Click" />
                            </StackPanel>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                </AppBarButton>

                <CommandBar.SecondaryCommands>
                    <AppBarButton x:Name="sortModeSplitButton"
                                  Label="Sort"
                                  Icon="Sort"
                                  Style="{StaticResource FlyoutAppBarButtonStyle}"
                                  ToolTipService.ToolTip="{x:Bind vmodel:SortModeHelpers.GetTooltipString(viewModel.SortMode), Mode=OneWay}">
                        <AppBarButton.Flyout>
                            <MenuFlyout x:Name="sortModeMenuFlyout"
                                        Placement="BottomEdgeAlignedLeft">
                                <RadioMenuFlyoutItem Text="All - Newest"
                                                     GroupName="SortMode"
                                                     Click="SortModeFlyoutItem_Click">
                                    <RadioMenuFlyoutItem.DataContext>
                                        <vmodel:SortMode>All_Newest</vmodel:SortMode>
                                    </RadioMenuFlyoutItem.DataContext>
                                </RadioMenuFlyoutItem>
                                <RadioMenuFlyoutItem Text="All - Oldest"
                                                     GroupName="SortMode"
                                                     Click="SortModeFlyoutItem_Click">
                                    <RadioMenuFlyoutItem.DataContext>
                                        <vmodel:SortMode>All_Oldest</vmodel:SortMode>
                                    </RadioMenuFlyoutItem.DataContext>
                                </RadioMenuFlyoutItem>
                                <RadioMenuFlyoutItem Text="Unread - Newest"
                                                     GroupName="SortMode"
                                                     Click="SortModeFlyoutItem_Click">
                                    <RadioMenuFlyoutItem.DataContext>
                                        <vmodel:SortMode>Unread_Newest</vmodel:SortMode>
                                    </RadioMenuFlyoutItem.DataContext>
                                </RadioMenuFlyoutItem>
                                <RadioMenuFlyoutItem Text="Unread - Oldest"
                                                     GroupName="SortMode"
                                                     Click="SortModeFlyoutItem_Click">
                                    <RadioMenuFlyoutItem.DataContext>
                                        <vmodel:SortMode>Unread_Oldest</vmodel:SortMode>
                                    </RadioMenuFlyoutItem.DataContext>
                                </RadioMenuFlyoutItem>
                            </MenuFlyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                    <AppBarButton x:Name="syncFeedButton"
                                  Icon="Refresh"
                                  Label="Refresh"
                                  LabelPosition="Collapsed"
                                  ToolTipService.ToolTip="Refresh"
                                  Click="syncFeedButton_Click" />
                </CommandBar.SecondaryCommands>

                <CommandBar.Content>
                        <TextBlock x:Name="FeedTitleText"
                                   Text="{x:Bind viewModel.Subscription.Title, Mode=OneWay}"
                                   ToolTipService.ToolTip="{x:Bind viewModel.Subscription.Title, Mode=OneWay}"
                                   Style="{StaticResource SubtitleTextBlockStyle}"
                                   HorizontalAlignment="Left"
                                   Margin="22,10,12,10"
                                   TextWrapping="NoWrap"
                                   TextTrimming="CharacterEllipsis" />
                </CommandBar.Content>
            </CommandBar>

            <RefreshContainer x:Name="ArticleListRefresh"
                              Grid.Row="1"
                              RefreshRequested="ArticleListRefresh_RefreshRequested">
                <ListView x:Name="articleListView"
                          SelectionMode="None"
                          IsItemClickEnabled="True"
                          SingleSelectionFollowsFocus="False"
                          DataFetchSize="6"
                          Margin="0,0,0,0"
                          Padding="6,0,10,0"
                          IncrementalLoadingThreshold="1"
                          ItemsSource="{Binding Source={StaticResource articleListViewSource}}"
                          ItemClick="articleListView_ItemClick">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Article">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Vertical"
                                            Grid.Column="1"
                                            Margin="4,0"
                                            Padding="0,10,15,10">
                                    <TextBlock Text="{x:Bind Title}"
                                               Grid.Row="0"
                                               Grid.Column="1"
                                               Margin="0,0,0,2"
                                               TextWrapping="WrapWholeWords"
                                               Opacity="{x:Bind IsRead, Converter={StaticResource UnreadToOpacityConverter}, Mode=OneWay}"
                                               Style="{StaticResource BaseTextBlockStyle}" />
                                    <TextBlock Text="{x:Bind Subtitle}"
                                               Grid.Row="1"
                                               Grid.Column="1"
                                               TextWrapping="WrapWholeWords"
                                               Opacity="{x:Bind IsRead, Converter={StaticResource UnreadToOpacityConverter}, Mode=OneWay}"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Text="{x:Bind ShortDate}"
                                               Grid.Row="2"
                                               Grid.Column="1"
                                               TextWrapping="WrapWholeWords"
                                               Opacity="{x:Bind IsRead, Converter={StaticResource UnreadToOpacityConverter}, Mode=OneWay}"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                </StackPanel>
                                <TextBlock Text="&#xE082;"
                                           FontFamily="{StaticResource SymbolThemeFontFamily}"
                                           Grid.Column="2"
                                           Margin="0,15,10,0"
                                           Opacity="{x:Bind IsRead, Converter={StaticResource UnreadToOpacityConverter}, Mode=OneWay}"
                                           Visibility="{x:Bind IsStarred, Converter={StaticResource BoolToVisibleConverter}, Mode=OneWay}" />
                                <Border Grid.Column="3"
                                        VerticalAlignment="Stretch"
                                        Margin="0,2,-8,2"
                                        CornerRadius="{StaticResource ControlCornerRadius}"
                                        Visibility="{x:Bind ShowImagePreview}">
                                    <Image Grid.Column="3"
                                           Width="75"
                                           VerticalAlignment="Stretch"
                                           Stretch="UniformToFill"
                                           Opacity="{x:Bind IsRead, Converter={StaticResource UnreadToOpacityConverter}, Mode=OneWay}"
                                           Visibility="{x:Bind ImageThumbnail, Converter={StaticResource NullToCollapsedConverter}}">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="192"
                                                         UriSource="{x:Bind ImageThumbnail}" />
                                        </Image.Source>
                                    </Image>
                                </Border>

                                <Grid.ContextFlyout>
                                    <CommandBarFlyout Placement="BottomEdgeAlignedLeft">
                                        <CommandBarFlyout.SecondaryCommands>
                                            <AppBarButton Icon="Accept"
                                                          Label="Mark as read"
                                                          Click="ReadFlyoutItem_Click"
                                                          Visibility="{x:Bind IsRead, Converter={StaticResource BoolToCollapsedConverter}, Mode=OneWay}" />
                                            <AppBarButton Icon="Cancel"
                                                          Label="Mark as unread"
                                                          Click="UnreadFlyoutItem_Click"
                                                          Visibility="{x:Bind IsRead, Mode=OneWay}" />
                                            <AppBarButton Icon="Favorite"
                                                          Label="Save"
                                                          Click="SaveFlyoutItem_Click"
                                                          Visibility="{x:Bind IsStarred, Converter={StaticResource BoolToCollapsedConverter}, Mode=OneWay}" />
                                            <AppBarButton Icon="UnFavorite"
                                                          Label="Unsave"
                                                          Click="UnsaveFlyoutItem_Click"
                                                          Visibility="{x:Bind IsStarred, Mode=OneWay}" />
                                            <AppBarButton Icon="Share"
                                                          Label="Share"
                                                          Click="ShareFlyoutItem_Click" />
                                            <AppBarSeparator />
                                            <AppBarButton Icon="{tk:FontIcon Glyph=&#xE010;}"
                                                          Label="Mark newer articles as read"
                                                          Click="ReadNewerFlyoutItem_Click"
                                                          Visibility="{Binding Source={StaticResource viewModel}, Path=SortModeIsNewestFirst}" />
                                            <AppBarButton Icon="{tk:FontIcon Glyph=&#xE010;}"
                                                          Label="Mark older articles as read"
                                                          Click="ReadOlderFlyoutItem_Click"
                                                          Visibility="{Binding Source={StaticResource viewModel}, Path=SortModeIsNewestFirst, Converter={StaticResource BoolToCollapsedConverter}}" />
                                            <AppBarButton Icon="{tk:FontIcon Glyph=&#xE011;}"
                                                          Label="Mark newer articles as read"
                                                          Click="ReadNewerFlyoutItem_Click"
                                                          Visibility="{Binding Source={StaticResource viewModel}, Path=SortModeIsNewestFirst, Converter={StaticResource BoolToCollapsedConverter}}" />
                                            <AppBarButton Icon="{tk:FontIcon Glyph=&#xE011;}"
                                                          Label="Mark older articles as read"
                                                          Click="ReadOlderFlyoutItem_Click"
                                                          Visibility="{Binding Source={StaticResource viewModel}, Path=SortModeIsNewestFirst}" />
                                        </CommandBarFlyout.SecondaryCommands>
                                    </CommandBarFlyout>
                                </Grid.ContextFlyout>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </RefreshContainer>

            <ProgressBar x:Name="ArticleListRefreshProgress"
                         Grid.Row="1"
                         VerticalAlignment="Top"
                         IsIndeterminate="True"
                         Visibility="{x:Bind viewModel.IsLoading, Mode=OneWay}" />

            <StackPanel Orientation="Vertical"
                        HorizontalAlignment="Center"
                        Grid.Row="1">
                <TextBlock x:Name="noArticlesText"
                           Text="No articles"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Margin="20"
                           Visibility="{x:Bind viewModel.NoArticles, Mode=OneWay}" />
            </StackPanel>
        </Grid>

        <!-- Article content card -->
        <Grid x:Name="ArticleContent"
              Grid.Column="1"
              Grid.Row="0"
              Style="{StaticResource CardGridStyle}"
              Margin="0,0,8,8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <CommandBar x:Name="articleCommandBar"
                        Grid.Row="0"
                        DefaultLabelPosition="Right"
                        VerticalContentAlignment="Top"
                        Visibility="{x:Bind viewModel.SelectedArticle, Converter={StaticResource NullToCollapsedConverter}, Mode=OneWay}">
                <AppBarButton x:Name="readingModeSplitButton"
                              Label="Reading mode"
                              Style="{StaticResource FlyoutAppBarButtonStyle}"
                              ToolTipService.ToolTip="{x:Bind vmodel:ReadingModeHelpers.GetTooltipString(viewModel.ReadingMode), Mode=OneWay}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE736;" />
                    </AppBarButton.Icon>
                    <AppBarButton.Flyout>
                        <MenuFlyout x:Name="readingModeMenuFlyout"
                                    Placement="BottomEdgeAlignedLeft">
                            <RadioMenuFlyoutItem Text="Feed"
                                                 GroupName="ReadingMode"
                                                 Click="ReadingModeFlyoutItem_Click">
                                <RadioMenuFlyoutItem.DataContext>
                                    <vmodel:ReadingMode>Feed</vmodel:ReadingMode>
                                </RadioMenuFlyoutItem.DataContext>
                            </RadioMenuFlyoutItem>
                            <RadioMenuFlyoutItem Text="Text"
                                                 GroupName="ReadingMode"
                                                 Click="ReadingModeFlyoutItem_Click">
                                <RadioMenuFlyoutItem.DataContext>
                                    <vmodel:ReadingMode>Text</vmodel:ReadingMode>
                                </RadioMenuFlyoutItem.DataContext>
                            </RadioMenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Name="StyleButton"
                              Label="Style"
                              Style="{StaticResource FlyoutAppBarButtonStyle}"
                              Icon="Font">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <StackPanel MinWidth="250" MaxWidth="300">
                                <TextBlock Text="Color Theme"
                                           Style="{StaticResource BodyStrongTextBlockStyle}" />
                                <RadioButtons ItemsSource="{x:Bind readingThemes}"
                                              MaxColumns="2"
                                              SelectedItem="{x:Bind selectedReadingTheme}"
                                              SelectionChanged="ReadingTheme_SelectionChanged" />
                                <MenuFlyoutSeparator Margin="0,8"/>
                                <TextBlock Text="Font"
                                           Margin="0,8,0,0"
                                           Style="{StaticResource BodyStrongTextBlockStyle}" />
                                <RadioButtons ItemsSource="{x:Bind viewModel.ReadingFonts}"
                                              MaxColumns="2"
                                              SelectedItem="{x:Bind viewModel.SelectedReadingFont, Mode=TwoWay}">
                                    <RadioButtons.ItemTemplate>
                                        <DataTemplate x:DataType="vmodel:ReadingFontViewModel">
                                            <RadioButton Style="{StaticResource FontRadioButtonStyle}">
                                                <TextBlock Text="{x:Bind Label}"
                                                           FontFamily="{x:Bind FontFamily}"
                                                           FontWeight="{x:Bind FontWeight}"
                                                           TextLineBounds="Tight"
                                                           VerticalAlignment="Center" />
                                            </RadioButton>
                                        </DataTemplate>
                                    </RadioButtons.ItemTemplate>
                                </RadioButtons>
                                <TextBlock Text="Text Size"
                                           Margin="0,12,0,0"
                                           Style="{StaticResource BodyStrongTextBlockStyle}" />
                                <Grid Margin="6,8,6,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="S"
                                               TextAlignment="Left"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Grid.Column="1"
                                               Text="M"
                                               TextAlignment="Center"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Grid.Column="2"
                                               Text="L"
                                               TextAlignment="Right"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                </Grid>
                                <Slider Value="{x:Bind viewModel.ReadingTextSize, Mode=TwoWay}"
                                        IsThumbToolTipEnabled="False"
                                        Minimum="8"
                                        Maximum="24"
                                        StepFrequency="2"
                                        TickFrequency="4"
                                        TickPlacement="TopLeft" />
                                <MenuFlyoutSeparator Margin="0,8" />
                                <TextBlock Text="Line Height"
                                           Margin="0,12,0,0"
                                           Style="{StaticResource BodyStrongTextBlockStyle}" />
                                <Grid Margin="0,8,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="Narrow"
                                               TextAlignment="Left"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Grid.Column="1"
                                               Text="Wide"
                                               TextAlignment="Right"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                </Grid>
                                <Slider Value="{x:Bind viewModel.ReadingLineHeight, Mode=TwoWay}"
                                        IsThumbToolTipEnabled="False"
                                        Minimum="1.0"
                                        Maximum="2.5"
                                        StepFrequency="0.25"
                                        TickFrequency="0.75"
                                        TickPlacement="TopLeft" />
                                <TextBlock Text="Column Width"
                                           Margin="0,12,0,0"
                                           Style="{StaticResource BodyStrongTextBlockStyle}" />
                                <Grid Margin="0,8,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="Narrow"
                                               TextAlignment="Left"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Grid.Column="1"
                                               Text="Wide"
                                               TextAlignment="Right"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                </Grid>
                                <Slider Value="{x:Bind viewModel.ReadingColumnWidth, Mode=TwoWay}"
                                        IsThumbToolTipEnabled="False"
                                        Minimum="400"
                                        Maximum="1000"
                                        StepFrequency="100"
                                        TickFrequency="300"
                                        TickPlacement="TopLeft" />
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarToggleButton x:Name="commentsButton"
                                    Label="View shares"
                                    ToolTipService.ToolTip="View comments and shares"
                                    Click="commentsButton_Click">
                    <Grid>
                        <FontIcon Glyph="&#xE15F;" />
                        <InfoBadge Value="{x:Bind viewModel.SelectedArticle.ShareCount, Mode=OneWay}"
                                   Margin="20,-20,0,0"
                                   Visibility="{x:Bind viewModel.SelectedArticle.HasShares, Mode=OneWay}" />
                    </Grid>
                </AppBarToggleButton>

                <CommandBar.SecondaryCommands>
                    <AppBarButton x:Name="openInBrowserButton"
                                  Icon="World"
                                  Label="Open in browser"
                                  ToolTipService.ToolTip="Open article in browser"
                                  Click="openInBrowserButton_Click" />
                    <AppBarButton x:Name="readButton"
                                  Label="Mark as read"
                                  Icon="Accept"
                                  ToolTipService.ToolTip="Mark article as read"
                                  Click="readButton_Click"
                                  Visibility="{x:Bind viewModel.SelectedArticle.IsRead, Converter={StaticResource BoolToCollapsedConverter}, Mode=OneWay}" />
                    <AppBarButton x:Name="unreadButton"
                                  Icon="Cancel"
                                  Label="Mark as unread"
                                  ToolTipService.ToolTip="Mark article as unread"
                                  Click="unreadButton_Click"
                                  Visibility="{x:Bind viewModel.SelectedArticle.IsRead, Mode=OneWay}" />
                    <AppBarButton x:Name="starButton"
                                  Icon="Favorite"
                                  Label="Save article"
                                  ToolTipService.ToolTip="Save article"
                                  Click="starButton_Click"
                                  Visibility="{x:Bind viewModel.SelectedArticle.IsStarred, Converter={StaticResource BoolToCollapsedConverter}, Mode=OneWay}" />
                    <AppBarButton x:Name="unstarButton"
                                  Icon="UnFavorite"
                                  Label="Unsave article"
                                  ToolTipService.ToolTip="Unsave article"
                                  Click="unstarButton_Click"
                                  Visibility="{x:Bind viewModel.SelectedArticle.IsStarred, Mode=OneWay}" />
                    <AppBarButton x:Name="shareButton"
                                  Icon="Share"
                                  Label="Share article"
                                  ToolTipService.ToolTip="Share article to other apps"
                                  Click="shareButton_Click" />
                </CommandBar.SecondaryCommands>
            </CommandBar>

            <view:ArticleFlipView x:Name="articleDetailView"
                                  Style="{StaticResource ArticleFlipViewStyle}"
                                  Grid.Row="1">
                <FlipView.ItemTemplate>
                    <DataTemplate x:DataType="model:Article">
                        <WebView2 x:Name="articleTextView"
                                  CanGoBack="False"
                                  CanGoForward="False"
                                  DefaultBackgroundColor="{x:Bind ContentBackgroundColor, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContent="{x:Bind ViewContent, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentHeader="{x:Bind ContentHeader, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentForeground="{x:Bind ContentForegroundBrush, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentLinkColor="{ThemeResource AccentTextFillColorPrimaryBrush}"
                                  helpers:DependencyPropertyHelper.HtmlContentScrollbarBackgroundColor="{ThemeResource ArticleContentScrollbarBackgroundBrush}"
                                  helpers:DependencyPropertyHelper.HtmlContentScrollbarColor="{ThemeResource ArticleContentScrollbarBrush}"
                                  helpers:DependencyPropertyHelper.HtmlContentFontFamily="{x:Bind ContentFontFamily, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentFontWeight="{x:Bind ContentFontWeight,Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentTextSize="{x:Bind ContentTextSize, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentLineHeight="{x:Bind ContentLineHeight, Mode=OneWay}"
                                  helpers:DependencyPropertyHelper.HtmlContentColumnWidth="{x:Bind ContentColumnWidth, Mode=OneWay}"
                                  Loaded="articleTextView_Loaded"
                                  NavigationStarting="articleTextView_NavigationStarting"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Margin="0,0,0,8">
                            <WebView2.Resources>
                                <SolidColorBrush x:Name="BrushForThemeBackgroundColor"
                                                 Color="{x:Bind WebViewBackgroundColor, Mode=OneWay}" />
                            </WebView2.Resources>
                        </WebView2>
                    </DataTemplate>
                </FlipView.ItemTemplate>
            </view:ArticleFlipView>

            <ProgressBar x:Name="ArticleTextViewLoadingProgress"
                         Grid.Row="1"
                         VerticalAlignment="Top"
                         IsIndeterminate="True"
                         Visibility="{x:Bind viewModel.IsLoadingOriginalText, Mode=OneWay}" />

            <!-- Content that appears when no article is selected -->
            <StackPanel Grid.Row="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Spacing="10"
                        Visibility="{x:Bind viewModel.SelectedArticle, Converter={StaticResource NullToVisibleConverter}, Mode=OneWay}">
                <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}"
                           FontSize="48"
                           Text="&#xE12A;"
                           TextAlignment="Center"
                           Opacity="0.5" />
                <TextBlock Text="Select an article to read"
                           Style="{StaticResource BodyStrongTextBlockStyle}"
                           Opacity="0.75" />
            </StackPanel>
        </Grid>
        
        <!-- Comments card -->
        <Grid x:Name="ArticleCommentsGrid"
              Grid.Row="1"
              Grid.Column="1"
              Style="{StaticResource CardGridStyle}"
              Margin="0,0,8,8"
              Visibility="{x:Bind viewModel.CommentsVisible, Mode=OneWay}">
            <ListView x:Name="CommentsListView"
                      SelectionMode="None"
                      IsItemClickEnabled="False"
                      Padding="16,10,16,24">
                <ListView.ItemContainerTransitions>
                    <TransitionCollection />
                </ListView.ItemContainerTransitions>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="MaxWidth"
                                Value="708" />
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>

        <toolkit:GridSplitter x:Name="ArticleCommentsSplitter"
                              Grid.Row="1"
                              Grid.Column="1"
                              Style="{StaticResource HorizGridSplitterStyle}"
                              Margin="0,-12,0,0"
                              ResizeDirection="Rows"
                              ResizeBehavior="PreviousAndCurrent"
                              VerticalAlignment="Top"
                              Visibility="{x:Bind viewModel.CommentsVisible, Mode=OneWay}" />
    </Grid>
</Page>
