<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
                    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:helpers="using:WinBlur.App.Helpers">

    <ResourceDictionary.ThemeDictionaries>
        <!-- We use ThemeResource bindings here instead of StaticResource as recommended in documentation.
             This is because these resources are accessed in code, not through XAML, which seems to have
             different behavior. -->
        <ResourceDictionary x:Key="Light">
            <!-- Titlebar brushes -->
            <SolidColorBrush x:Key="WindowCaptionForeground" Color="{ThemeResource TextFillColorPrimary}"/>
            <SolidColorBrush x:Key="WindowCaptionForegroundDisabled" Color="{ThemeResource TextFillColorDisabled}"/>
            <SolidColorBrush x:Key="TitlebarBackgroundDisabled" Color="{ThemeResource SolidBackgroundFillColorBase}"/>

            <!-- Article content brushes -->
            <SolidColorBrush x:Key="ArticleContentScrollbarBackgroundBrush" Color="#FCFCFC"/>
            <SolidColorBrush x:Key="ArticleContentScrollbarBrush" Color="#8A8A8A"/>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">
            <!-- Titlebar brushes -->
            <SolidColorBrush x:Key="WindowCaptionForeground" Color="{ThemeResource TextFillColorPrimary}"/>
            <SolidColorBrush x:Key="WindowCaptionForegroundDisabled" Color="{ThemeResource TextFillColorDisabled}"/>
            <SolidColorBrush x:Key="TitlebarBackgroundDisabled" Color="{ThemeResource SolidBackgroundFillColorBase}"/>

            <!-- Article content brushes -->
            <SolidColorBrush x:Key="ArticleContentScrollbarBackgroundBrush" Color="#2C2C2C"/>
            <SolidColorBrush x:Key="ArticleContentScrollbarBrush" Color="#A1A1A1"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <SolidColorBrush x:Key="WindowCaptionBackground" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowCaptionBackgroundDisabled" Color="Transparent"/>
    <SolidColorBrush x:Key="TitlebarBackground" Color="Transparent"/>

    <!-- Red accent color shades -->
    <Color x:Key="RedAccentColor">#FFE61717</Color>
    <Color x:Key="RedAccentColorSemilight">#FFE64545</Color>
    <Color x:Key="RedAccentColorLight">#FFE67373</Color>
    <SolidColorBrush x:Key="RedAccentColorBrush" Color="{StaticResource RedAccentColor}"/>
    <SolidColorBrush x:Key="RedAccentColorBrushSemilight" Color="{StaticResource RedAccentColorSemilight}"/>
    <SolidColorBrush x:Key="RedAccentColorBrushLight" Color="{StaticResource RedAccentColorLight}"/>
    
    <!-- Control light-weight styling -->
    <StaticResource x:Key="CommandBarBackgroundOpen" ResourceKey="ControlFillColorTransparentBrush"/>
    <Thickness x:Key="CommandBarBorderThicknessOpen">0</Thickness>
    
    <Style x:Key="CardGridStyle" TargetType="Grid">
        <Setter Property="Background"
                Value="{ThemeResource LayerFillColorDefaultBrush}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource CardStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CornerRadius"
                Value="8" />
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
        <Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizGridSplitterStyle" TargetType="toolkit:GridSplitter">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsFocusEngagementEnabled" Value="True" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="GripperForeground" Value="{ThemeResource SystemControlForegroundAltHighBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:GridSplitter">
                    <Grid x:Name="RootGrid" IsHitTestVisible="True" Background="{TemplateBinding Background}">
                        <helpers:SplitterContentPresenter x:Name="SplitterContentPresenter"
                                                          VerticalAlignment="Center"
                                                          HorizontalContentAlignment="Stretch"
                                                          VerticalContentAlignment="Stretch"
                                                          Visibility="Collapsed"
                                                          Padding="8,0"
                                                          Content="{TemplateBinding Element}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="GridSplitterStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="SplitterContentPresenter.Visibility" Value="Visible"/>
                                        <Setter Target="SplitterContentPresenter.Background" Value="{ThemeResource SystemControlForegroundChromeHighBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="SplitterContentPresenter.Visibility" Value="Visible"/>
                                        <Setter Target="SplitterContentPresenter.Background" Value="{ThemeResource SystemControlForegroundChromeMediumBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Adapted from WinUI NavigationView's PaneToggleButtonStyle -->
    <Style x:Key="SplitViewToggleButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{ThemeResource SubtleFillColorTransparentBrush}"/>
        <Setter Property="AutomationProperties.Name" Value="Menu" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot"
                          Height="{TemplateBinding MinHeight}"
                          Margin="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          HorizontalAlignment="Stretch"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)"
                                                Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)"
                                                Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Width="{TemplateBinding MinWidth}">
                            <muxc:AnimatedIcon x:Name="Icon"
                                                Width="16"
                                                Height="16"
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Margin="0,2,0,0"
                                                AutomationProperties.AccessibilityView="Raw"
                                                muxc:AnimatedIcon.State="Normal">
                                <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                                <muxc:AnimatedIcon.FallbackIconSource>
                                    <muxc:FontIconSource Glyph="&#xE700;"
                                                          FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize }" />
                                </muxc:AnimatedIcon.FallbackIconSource>
                            </muxc:AnimatedIcon>
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter"
                                          VerticalContentAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Padding="0,0,0,0"
                                          Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArticleFlipViewStyle" TargetType="FlipView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True" />
        <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="FlipView">
                    <Grid
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDA;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        MirroredWhenRightToLeft="True"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDD9;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        MirroredWhenRightToLeft="True"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                        Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                        BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                        BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDC;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDB;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                        </Grid.Resources>
                        <ScrollViewer x:Name="ScrollingHost"
                            VerticalSnapPointsType="MandatorySingle"
                            HorizontalSnapPointsType="MandatorySingle"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                            Padding="{TemplateBinding Padding}"
                            ZoomMode="Disabled"
                            TabNavigation="{TemplateBinding TabNavigation}"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw">
                            <ItemsPresenter />
                        </ScrollViewer>
                        <Button x:Name="MyPreviousButtonHorizontal"
                            Template="{StaticResource HorizontalPreviousTemplate}"
                            Width="16"
                            Height="38"
                            Margin="12,1,1,1"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                        <Button x:Name="MyNextButtonHorizontal"
                            Template="{StaticResource HorizontalNextTemplate}"
                            Width="16"
                            Height="38"
                            Margin="1,1,12,1"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                        <Button x:Name="PreviousButtonVertical"
                            Template="{StaticResource VerticalPreviousTemplate}"
                            Width="38"
                            Height="16"
                            Margin="1"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top" />
                        <Button x:Name="NextButtonVertical"
                            Template="{StaticResource VerticalNextTemplate}"
                            Width="38"
                            Height="16"
                            Margin="1"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Override style for AppBarButton to show chevron to work around a bug. -->
    <Style x:Key="FlyoutAppBarButtonStyle"
           TargetType="AppBarButton">
        <Setter Property="Background"
                Value="{ThemeResource AppBarButtonBackground}" />
        <Setter Property="Foreground"
                Value="{ThemeResource AppBarButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource AppBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Width"
                Value="NaN" />
        <Setter Property="MinWidth"
                Value="68" />
        <Setter Property="UseSystemFocusVisuals"
                Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin"
                Value="-3" />
        <Setter Property="AllowFocusOnInteraction"
                Value="False" />
        <Setter Property="CornerRadius"
                Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="KeyboardAcceleratorPlacementMode"
                Value="Hidden" />
        <Setter Property="BackgroundSizing"
                Value="InnerBorderEdge" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarButton">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Margin"
                                                Value="{StaticResource AppBarButtonInnerBorderCompactMargin}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelOnRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox"
                                                                       Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource AppBarButtonContentViewboxMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                       Storyboard.TargetProperty="MinHeight">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource AppBarThemeCompactHeight}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="TextAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Left" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource AppBarButtonTextLabelOnRightMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubItemChevron"
                                                                       Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource AppBarButtonSubItemChevronLabelOnRightMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                       Storyboard.TargetProperty="MinHeight">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource AppBarThemeCompactHeight}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Overflow">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin"
                                                Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="TextLabel.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin"
                                                Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="TextLabel.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="38,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin"
                                                Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment"
                                                Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment"
                                                Value="Center" />
                                        <Setter Target="ContentViewbox.Width"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Height"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Margin"
                                                Value="12,0,12,0" />
                                        <Setter Target="TextLabel.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="38,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight"
                                                Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin"
                                                Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment"
                                                Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment"
                                                Value="Center" />
                                        <Setter Target="ContentViewbox.Width"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Height"
                                                Value="16" />
                                        <Setter Target="ContentViewbox.Margin"
                                                Value="38,0,12,0" />
                                        <Setter Target="TextLabel.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility"
                                                Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin"
                                                Value="76,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundDisabled}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowNormal">
                                    <VisualState.Setters>
                                        <Setter Target="SubItemChevron.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowSubItemChevron.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundPointerOver}" />
                                        <Setter Target="SubItemChevron.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowSubItemChevron.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowPressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundPressed}" />
                                        <Setter Target="SubItemChevron.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowSubItemChevron.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowSubMenuOpened">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background"
                                                Value="{ThemeResource AppBarButtonBackgroundSubMenuOpened}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush"
                                                Value="{ThemeResource AppBarButtonBorderBrushSubMenuOpened}" />
                                        <Setter Target="Content.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="TextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="OverflowTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground"
                                                Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundSubMenuOpened}" />
                                        <Setter Target="SubItemChevron.Foreground"
                                                Value="{ThemeResource AppBarButtonSubItemChevronForegroundSubMenuOpened}" />
                                        <Setter Target="SubItemChevron.Visibility"
                                                Value="Collapsed" />
                                        <Setter Target="OverflowSubItemChevron.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputModeStates">
                                <VisualState x:Name="InputModeDefault" />
                                <VisualState x:Name="TouchInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding"
                                                Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="GameControllerInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding"
                                                Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                    <VisualState.Setters>
                                        <Setter Target="KeyboardAcceleratorTextLabel.Visibility"
                                                Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AppBarButtonInnerBorder"
                                Margin="{ThemeResource AppBarButtonInnerBorderMargin}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                Control.IsTemplateFocusTarget="True">
                            <Border.BackgroundTransition>
                                <BrushTransition Duration="0:0:0.083" />
                            </Border.BackgroundTransition>
                        </Border>
                        <Grid x:Name="ContentRoot"
                              MinHeight="{ThemeResource AppBarThemeMinHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Viewbox x:Name="ContentViewbox"
                                     Height="{ThemeResource AppBarButtonContentHeight}"
                                     Margin="{ThemeResource AppBarButtonContentViewboxCollapsedMargin}"
                                     HorizontalAlignment="Stretch"
                                     AutomationProperties.AccessibilityView="Raw">
                                <ContentPresenter x:Name="Content"
                                                  Content="{TemplateBinding Icon}"
                                                  Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock x:Name="TextLabel"
                                       Grid.Row="1"
                                       Text="{TemplateBinding Label}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="12"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       TextAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="{ThemeResource AppBarButtonTextLabelMargin}"
                                       AutomationProperties.AccessibilityView="Raw" />
                            <TextBlock x:Name="OverflowTextLabel"
                                       Text="{TemplateBinding Label}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{ThemeResource ControlContentThemeFontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       TextAlignment="Left"
                                       TextTrimming="Clip"
                                       TextWrapping="NoWrap"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"
                                       Margin="12,0,12,0"
                                       Padding="{ThemeResource AppBarButtonOverflowTextLabelPadding}"
                                       Visibility="Collapsed"
                                       AutomationProperties.AccessibilityView="Raw" />
                            <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                       Grid.Column="1"
                                       Style="{ThemeResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                       MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                       Margin="24,0,12,0"
                                       Foreground="{ThemeResource AppBarButtonKeyboardAcceleratorTextForeground}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Visibility="Collapsed"
                                       AutomationProperties.AccessibilityView="Raw" />
                            <Grid x:Name="SubItemChevronPanel"
                                  Grid.Column="2"
                                  Visibility="Visible">
                                <FontIcon x:Name="SubItemChevron"
                                          Glyph="{ThemeResource AppBarButtonFlyoutGlyph}"
                                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                          FontSize="{ThemeResource AppBarButtonSubItemChevronFontSize}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Foreground="{ThemeResource AppBarButtonSubItemChevronForeground}"
                                          VerticalAlignment="Top"
                                          Margin="{ThemeResource AppBarButtonSubItemChevronMargin}"
                                          MirroredWhenRightToLeft="True"
                                          Visibility="Visible" />
                                <FontIcon x:Name="OverflowSubItemChevron"
                                          Glyph="{ThemeResource AppBarButtonOverflowFlyoutGlyph}"
                                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                          FontSize="{ThemeResource AppBarButtonSecondarySubItemChevronFontSize}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Foreground="{ThemeResource AppBarButtonSubItemChevronForeground}"
                                          VerticalAlignment="Center"
                                          Margin="{ThemeResource AppBarButtonSecondarySubItemChevronMargin}"
                                          MirroredWhenRightToLeft="True"
                                          Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Converters -->
    <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
    <converters:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" TrueValue="Collapsed" FalseValue="Visible"/>
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibleConverter" TrueValue="Visible" FalseValue="Collapsed"/>
    <converters:BoolToObjectConverter x:Key="BoolToDoubleConverter" TrueValue="1.0" FalseValue="0.0"/>
    <converters:BoolToObjectConverter x:Key="UnreadToOpacityConverter" TrueValue="0.5" FalseValue="1.0"/>
    <converters:BoolToObjectConverter x:Key="LikedToContentConverter" TrueValue="&#xE1CF;" FalseValue="&#xE1CE;"/>
    <converters:EmptyObjectToObjectConverter x:Key="NullToCollapsedConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
    <converters:EmptyObjectToObjectConverter x:Key="NullToVisibleConverter" EmptyValue="Visible" NotEmptyValue="Collapsed"/>
    <helpers:DepthToMarginConverter x:Key="DepthToMarginConverter"/>

</ResourceDictionary>
