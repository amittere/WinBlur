<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
                    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:helpers="using:WinBlur.App.Helpers">

    <ResourceDictionary.ThemeDictionaries>
        <!-- We use ThemeResource bindings here instead of StaticResource as recommended in documentation.
             This is because these resources are accessed in code, not through XAML, which seems to have
             different behavior. -->
        <ResourceDictionary x:Key="Light">
            <!-- Titlebar brushes -->
            <SolidColorBrush x:Key="WindowCaptionForeground" Color="{ThemeResource TextFillColorPrimary}"/>
            <SolidColorBrush x:Key="WindowCaptionForegroundDisabled" Color="{ThemeResource TextFillColorDisabled}"/>
            <SolidColorBrush x:Key="TitlebarBackgroundDisabled" Color="{ThemeResource SolidBackgroundFillColorBase}"/>

            <!-- Article content brushes -->
            <SolidColorBrush x:Key="ArticleContentHyperlinkBrush" Color="{StaticResource SystemAccentColorDark1}"/>
            <SolidColorBrush x:Key="ArticleContentScrollbarBrush" Color="#8A8A8A"/>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">
            <!-- Titlebar brushes -->
            <SolidColorBrush x:Key="WindowCaptionForeground" Color="{ThemeResource TextFillColorPrimary}"/>
            <SolidColorBrush x:Key="WindowCaptionForegroundDisabled" Color="{ThemeResource TextFillColorDisabled}"/>
            <SolidColorBrush x:Key="TitlebarBackgroundDisabled" Color="{ThemeResource SolidBackgroundFillColorBase}"/>

            <!-- Article content brushes -->
            <SolidColorBrush x:Key="ArticleContentHyperlinkBrush" Color="{StaticResource SystemAccentColorLight1}"/>
            <SolidColorBrush x:Key="ArticleContentScrollbarBrush" Color="#A1A1A1"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <SolidColorBrush x:Key="WindowCaptionBackground" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowCaptionBackgroundDisabled" Color="Transparent"/>
    <SolidColorBrush x:Key="TitlebarBackground" Color="Transparent"/>

    <!-- Red accent color shades -->
    <Color x:Key="RedAccentColor">#FFE61717</Color>
    <Color x:Key="RedAccentColorSemilight">#FFE64545</Color>
    <Color x:Key="RedAccentColorLight">#FFE67373</Color>
    <SolidColorBrush x:Key="RedAccentColorBrush" Color="{StaticResource RedAccentColor}"/>
    <SolidColorBrush x:Key="RedAccentColorBrushSemilight" Color="{StaticResource RedAccentColorSemilight}"/>
    <SolidColorBrush x:Key="RedAccentColorBrushLight" Color="{StaticResource RedAccentColorLight}"/>
    
    <!-- Control light-weight styling -->
    <StaticResource x:Key="CommandBarBackgroundOpen" ResourceKey="ControlFillColorTransparentBrush"/>
    <Thickness x:Key="CommandBarBorderThicknessOpen">0</Thickness>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
        <Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizGridSplitterStyle" TargetType="toolkit:GridSplitter">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsFocusEngagementEnabled" Value="True" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="GripperForeground" Value="{ThemeResource SystemControlForegroundAltHighBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:GridSplitter">
                    <Grid x:Name="RootGrid" IsHitTestVisible="True" Background="{TemplateBinding Background}">
                        <helpers:SplitterContentPresenter x:Name="SplitterContentPresenter"
                                                          VerticalAlignment="Center"
                                                          HorizontalContentAlignment="Stretch"
                                                          VerticalContentAlignment="Stretch"
                                                          Visibility="Collapsed"
                                                          Padding="8,0"
                                                          Content="{TemplateBinding Element}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="GridSplitterStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="SplitterContentPresenter.Visibility" Value="Visible"/>
                                        <Setter Target="SplitterContentPresenter.Background" Value="{ThemeResource SystemControlForegroundChromeHighBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="SplitterContentPresenter.Visibility" Value="Visible"/>
                                        <Setter Target="SplitterContentPresenter.Background" Value="{ThemeResource SystemControlForegroundChromeMediumBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Adapted from WinUI NavigationView's PaneToggleButtonStyle -->
    <Style x:Key="SplitViewToggleButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{ThemeResource SubtleFillColorTransparentBrush}"/>
        <Setter Property="AutomationProperties.Name" Value="Menu" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot"
                          Height="{TemplateBinding MinHeight}"
                          Margin="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          HorizontalAlignment="Stretch"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)"
                                                Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)"
                                                Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background"
                                                Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground"
                                                Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Width="{TemplateBinding MinWidth}">
                            <muxc:AnimatedIcon x:Name="Icon"
                                                Width="16"
                                                Height="16"
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Margin="0,2,0,0"
                                                AutomationProperties.AccessibilityView="Raw"
                                                muxc:AnimatedIcon.State="Normal">
                                <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                                <muxc:AnimatedIcon.FallbackIconSource>
                                    <muxc:FontIconSource Glyph="&#xE700;"
                                                          FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize }" />
                                </muxc:AnimatedIcon.FallbackIconSource>
                            </muxc:AnimatedIcon>
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter"
                                          VerticalContentAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Padding="0,0,0,0"
                                          Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Converters -->
    <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
    <converters:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" TrueValue="Collapsed" FalseValue="Visible"/>
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibleConverter" TrueValue="Visible" FalseValue="Collapsed"/>
    <converters:BoolToObjectConverter x:Key="BoolToDoubleConverter" TrueValue="1.0" FalseValue="0.0"/>
    <converters:BoolToObjectConverter x:Key="UnreadToOpacityConverter" TrueValue="0.5" FalseValue="1.0"/>
    <converters:BoolToObjectConverter x:Key="LikedToContentConverter" TrueValue="&#xE1CF;" FalseValue="&#xE1CE;"/>
    <converters:EmptyObjectToObjectConverter x:Key="NullToCollapsedConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
    <converters:EmptyObjectToObjectConverter x:Key="NullToVisibleConverter" EmptyValue="Visible" NotEmptyValue="Collapsed"/>
    <helpers:DepthToMarginConverter x:Key="DepthToMarginConverter"/>

</ResourceDictionary>
